{"version":3,"sources":["Shared/components/UIElements/Card.js","Shared/components/UIElements/Avatar.js","Users/components/UserItem.js","Users/components/UsersList.js","Users/pages/users.js"],"names":["Card","props","className","style","children","Avatar","src","image","alt","width","height","UserItem","to","id","process","name","placeCount","UsersList","items","length","map","user","key","places","Users","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","useEffect","responseData","users","fetchUsers","Fragment","ErrorModal","onClear","LoadingSpinner"],"mappings":"qGAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,8JCSEC,G,YAZA,SAAAJ,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEG,IAAKL,EAAMM,MACXC,IAAKP,EAAMO,IACXL,MAAO,CAAEM,MAAOR,EAAMQ,MAAOC,OAAQT,EAAMQ,Y,gBCgBpCE,EApBE,SAAAV,GACb,OACI,wBAAKC,UAAU,aACX,yBAAKA,UAAU,sBACX,kBAACF,EAAA,EAAD,KACF,kBAAC,IAAD,CAAMY,GAAE,WAAMX,EAAMY,GAAZ,YACN,yBAAKX,UAAU,oBACX,kBAAC,EAAD,CAAQK,MAAK,UAAKO,6CAAL,YAAwCb,EAAMM,OAASC,IAAKP,EAAMc,QAEnF,yBAAKb,UAAU,mBACX,4BAAKD,EAAMc,MACX,4BAAKd,EAAMe,WAAX,IAA6C,IAArBf,EAAMe,WAAmB,QAAU,gBCchEC,G,MAzBG,SAAAhB,GACd,OAA0B,IAAvBA,EAAMiB,MAAMC,OAEX,yBAAKjB,UAAU,UACX,kBAACF,EAAA,EAAD,KACA,mDAMJ,wBAAIE,UAAU,cACTD,EAAMiB,MAAME,KAAI,SAAAC,GAAI,OACrB,kBAAC,EAAD,CACAC,IAAKD,EAAKR,GACVA,GAAIQ,EAAKR,GACTN,MAAOc,EAAKd,MACZQ,KAAMM,EAAKN,KACXC,WAAcK,EAAKE,OAAOJ,e,i0MCoCvBK,UArDD,WAGV,MAAoDC,cAA7CC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,YAAaC,EAAtC,EAAsCA,WACtC,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KAoCA,OAlCAC,qBAAU,YACU,uCAAG,6GAGYL,EAAYd,wDAHxB,OAGToB,EAHS,OAWnBF,EAAeE,EAAaC,OAXT,uGAAH,qDAmBhBC,KACD,CAACR,IAcA,kBAAC,IAAMS,SAAP,KACI,kBAACC,EAAA,EAAD,CAAYX,MAAOA,EAAOY,QAASV,IAClCH,GACG,yBAAKxB,UAAU,UACX,kBAACsC,EAAA,EAAD,QAGVd,GAAaK,GAAe,kBAAC,EAAD,CAAWb,MAAOa","file":"static/js/8.5fb6bb09.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\r\nimport './UserItem.css';\r\nimport Avatar from '../../Shared/components/UIElements/Avatar';\r\nimport {Link} from 'react-router-dom';\r\nimport Card from  '../../Shared/components/UIElements/Card.js'\r\n\r\nconst UserItem = props => {\r\n    return(\r\n        <li  className=\"user-item\">\r\n            <div className='user-item__content'>\r\n                <Card >\r\n              <Link to={`/${props.id}/places`}>\r\n                <div className='user-item__image'>\r\n                    <Avatar image={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.name} />\r\n                </div>\r\n                <div className='user-item__info'>\r\n                    <h2>{props.name}</h2>\r\n                    <h3>{props.placeCount} {props.placeCount === 1 ? 'Place' : 'Places' }</h3>\r\n                </div>\r\n              </Link>\r\n              </Card>\r\n            </div>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default UserItem;","import React from 'react';\r\nimport UserItem from './UserItem';\r\nimport './UsersList.css';\r\nimport './UserItem';\r\nimport Card from '../../Shared/components/UIElements/Card';\r\n\r\nconst UsersList = props => {\r\n    if(props.items.length === 0) {\r\n        return (\r\n        <div className='center'>\r\n            <Card>\r\n            <h2>No users found...</h2>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n    return(\r\n        <ul className=\"users-list\">\r\n            {props.items.map(user => (\r\n            <UserItem\r\n            key={user.id}\r\n            id={user.id}\r\n            image={user.image}\r\n            name={user.name}\r\n            placeCount = {user.places.length}/>\r\n            ))}\r\n        </ul>\r\n    );\r\n    \r\n};\r\n\r\nexport default UsersList;","import React, { useEffect, useState } from 'react';\r\nimport '../components/UsersList';\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../Shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../Shared/components/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../Shared/hooks/http-hook';\r\n\r\nconst Users = () => {\r\n    // const [isLoading, setIsLoading] = useState(false);\r\n    // const [error, setError] = useState();\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient(); \r\n    const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchUsers = async () => {  // changed sendRequest to fetchUsers to avoid name duplication as we already used in http-hook.js\r\n        // setIsLoading(true);\r\n        try{\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users');\r\n\r\n        // const responseData = await response.json();\r\n\r\n        // if(!response.ok){\r\n        //     throw new Error (responseData.message);\r\n        // }\r\n\r\n        setLoadedUsers(responseData.users);\r\n        }\r\n        catch(err){\r\n            // setIsLoading(false);\r\n            // setError(err.message);\r\n        }\r\n        // setIsLoading(false);\r\n        };\r\n        fetchUsers();\r\n    }, [sendRequest]);\r\n\r\n    // const errorHandler = () => {\r\n    //     setError(null);\r\n    // };\r\n//     const USERS =[\r\n//     {\r\n//     id:'u1',\r\n//     name:'Vijayaraj',\r\n//     image:'https://pickytop.com/wp-content/uploads/2020/05/Hrithik-Roshan.jpg',\r\n//     places: 3\r\n//    }\r\n// ];\r\n    return(\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError}/>\r\n            {isLoading && (\r\n                <div className='center'>\r\n                    <LoadingSpinner/>\r\n                </div>\r\n            )}\r\n        {!isLoading && loadedUsers && <UsersList items={loadedUsers}/>}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Users;"],"sourceRoot":""}