{"version":3,"sources":["Shared/components/UIElements/Card.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","Shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","Shared/components/FormElements/Input.js","Shared/hooks/form-hook.js","Shared/components/FormElements/ImageUpload.js","Users/pages/Auth.js"],"names":["Card","props","className","style","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","valid","inputState","dispatch","id","onInput","useEffect","onChangeHandler","event","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","console","log","fileIsValid","files","center","src","alt","onClick","current","click","Auth","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","email","password","inputHandler","setFormData","authSubmitHandler","preventDefault","process","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","Fragment","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"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","file":"static/js/4.c203a1fd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","//There are several libraries to create forms and validate it eg. Formik - third party libraries\r\n\r\nimport React, {useReducer, useEffect} from \"react\";\r\nimport { validate } from \"../../util/validators\";\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return{\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n            case 'TOUCH': {\r\n                return{\r\n                ...state,\r\n                isTouched: true\r\n                }\r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n};\r\n\r\nconst Input = props => {\r\n\r\n    const [inputState, dispatch] = useReducer(inputReducer, {\r\n        value: props.value || \"\", \r\n        isTouched:false, \r\n        isValid: props.valid || false\r\n    });\r\n    const{id, onInput} = props;\r\n    const{value, isValid} = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id,onInput,value,isValid]);\r\n\r\n    const onChangeHandler = event => {\r\n        dispatch({\r\n            type: 'CHANGE', \r\n            val: event.target.value, \r\n            validators:props.validators\r\n        });\r\n    };\r\n    const touchHandler = () => {\r\n        dispatch({\r\n              type: 'TOUCH'\r\n        });\r\n    }\r\n    const element = props.element === 'input' ? ( \r\n    <input \r\n    id={props.id} \r\n    type={props.type} \r\n    placeholder={props.placeholder} \r\n    onChange={onChangeHandler}\r\n    onBlur={touchHandler}\r\n    value={inputState.value}\r\n    />\r\n    ):(\r\n        <textarea \r\n        id={props.id} \r\n        rows={props.rows || 3} \r\n        onChange={onChangeHandler} \r\n        onBlur={touchHandler}\r\n        value={inputState.value}/>\r\n    );\r\n    return (\r\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && `form-control--invalid`}`}>\r\n            <label htmlFor={props.id} >{props.label}</label>\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import { useCallback,useReducer } from \"react\";\r\n\r\n\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n      case 'INPUT_CHANGE':\r\n        let formIsValid = true;\r\n        for (const inputId in state.inputs) {\r\n          if(!state.inputs[inputId]){\r\n            continue;\r\n          }\r\n          if (inputId === action.inputId) {\r\n            formIsValid = formIsValid && action.isValid;\r\n          } else {\r\n            formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n          }\r\n        }\r\n        return {\r\n          ...state,\r\n          inputs: {\r\n            ...state.inputs,\r\n            [action.inputId]: { value: action.value, isValid: action.isValid }\r\n          },\r\n          isValid: formIsValid\r\n        };\r\n        case 'SET_DATA':\r\n            return{\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n     const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n        type: 'SET_DATA',\r\n        inputs: inputData,\r\n        formIsValid: formValidity\r\n    });\r\n  },[]);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};","import React,{ useRef, useState, useEffect} from \"react\";\r\nimport Button from \"./Button\";\r\nimport './ImageUpload.css';\r\n\r\n// Allows user to pick an image and also show Preview\r\nconst ImageUpload = props => {\r\n    const [file, setFile] = useState();\r\n    const [previewUrl, setPreviewUrl] = useState();\r\n    const [isValid, setIsValid] = useState();\r\n\r\n    const filePickerRef = useRef ();\r\n\r\n    useEffect(() => {\r\n        if(!file){\r\n            return;\r\n        }\r\n        const fileReader  = new FileReader();\r\n        fileReader.onload = () => {\r\n            setPreviewUrl(fileReader.result);\r\n        };\r\n        fileReader.readAsDataURL(file); // this does not give a promise so we use the above statement\r\n    }, [file]);\r\n\r\n    const pickedHandler = event => {\r\n        console.log(event.target);\r\n        let pickedFile;\r\n        let fileIsValid = isValid;\r\n        if(event.target.files && event.target.files.length === 1){\r\n            pickedFile = event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid = true;\r\n        }\r\n        else{\r\n           setIsValid(false); \r\n           fileIsValid = false;\r\n        }\r\n        props.onInput(props.id, pickedFile, fileIsValid);\r\n    };\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    };\r\n    return (\r\n        <div className=\"form-control\">\r\n            <input \r\n            id={props.id} \r\n            ref={filePickerRef} // to locate the input tag to the pickImageHandler \r\n            style={{display: 'none'}} \r\n            type={'file'} \r\n            accept='.jpg,.png,.jpeg'  // accept is a default attribute used in input tags of type= file\r\n            onChange = {pickedHandler}  />\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className=\"image-upload__preview\">\r\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\"/>}\r\n                    {!previewUrl && <p>Please pick an Image...</p>}\r\n                </div>\r\n                <Button type=\"button\" onClick={pickImageHandler}>\r\n                    PICK IMAGE\r\n                </Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUpload;","import React, {useState, useContext} from \"react\";\r\n\r\nimport {\r\n    VALIDATOR_REQUIRE,\r\n    VALIDATOR_MINLENGTH,\r\n    VALIDATOR_EMAIL\r\n  } from '../../Shared/util/validators';\r\n  import Input from '../../Shared/components/FormElements/Input';\r\nimport Button from '../../Shared/components/FormElements/Button';\r\nimport Card from '../../Shared/components/UIElements/Card';\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport ImageUpload from \"../../Shared/components/FormElements/ImageUpload\";\r\nimport './Auth.css';\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport LoadingSpinner from \"../../Shared/components/UIElements/LoadingSpinner\";\r\nimport { useForm } from '../../Shared/hooks/form-hook';\r\nimport ErrorModal from \"../../Shared/components/UIElements/ErrorModal\";\r\n\r\n\r\nconst Auth = () => {\r\n     const [isLoginMode, setIsLoginMode] = useState(true);\r\n     const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n\r\n    //  const [isLoading, setIsLoading] = useState(false);\r\n    //  const [error, setError] = useState();\r\n\r\n     const auth = useContext(AuthContext);\r\n  \r\n    const [formState, inputHandler, setFormData] = useForm(\r\n      {\r\n        email: {\r\n          value: '',\r\n          isValid: false\r\n        },\r\n        password: {\r\n          value: '',\r\n          isValid: false\r\n        }\r\n      },\r\n      false\r\n    );\r\n  \r\n    const authSubmitHandler = async event => {\r\n      event.preventDefault();\r\n      //console.log(formState.inputs);\r\n      // Checking whether its logged in or not \r\n      //setIsLoading(true);\r\n      if(isLoginMode){\r\n        try{\r\n          const responseData = await sendRequest(\r\n            process.env.REACT_APP_BACKEND_URL + '/users/login',\r\n            'POST',\r\n            JSON.stringify({\r\n              email: formState.inputs.email.value,\r\n              password: formState.inputs.password.value\r\n            }),\r\n            {\r\n              'Content-Type': 'application/json'\r\n            }\r\n          );\r\n          auth.login(responseData.userId,responseData.token);\r\n        } catch (err) {}\r\n      }\r\n    \r\n      else{\r\n        try{\r\n          // For sending texts like email, password this JSON format will do but for images we have to \r\n          // change the file type that we send to the backend so we use FORMDATA - It's an built in browser API\r\n          const formData = new FormData();\r\n          formData.append('email', formState.inputs.email.value);\r\n          formData.append('name', formState.inputs.name.value);\r\n          formData.append('password', formState.inputs.password.value);\r\n          formData.append('image', formState.inputs.image.value);\r\n          const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + '/users/signup',\r\n            'POST',\r\n            // We use formdata here instead of JSON and we don't want to give headers as formdata will automatically take careof it\r\n            formData\r\n      );\r\n      auth.login(responseData.userId, responseData.token);\r\n    }\r\n      catch(err){ }\r\n    }\r\n  };\r\n    \r\n    const switchModeHandler = () => {\r\n        if(!isLoginMode){\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: undefined,\r\n                image: undefined\r\n            },\r\n            formState.inputs.email.isValid && formState.inputs.password.isValid )\r\n        }\r\n        else{\r\n            setFormData({\r\n                ...formState.inputs,\r\n                name: {\r\n                    value: '',\r\n                    isValid: false\r\n                  },\r\n                  image: {\r\n                    value: null,\r\n                    isValid: false\r\n                  }\r\n            }, false);\r\n        }\r\n        setIsLoginMode(prevMode => !prevMode);\r\n      };\r\n  \r\n      // const errorHandler = () =>{\r\n      //   setError(null);\r\n      // }\r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error = {error} onClear={clearError}/>\r\n        <Card className=\"authentication\">\r\n          {isLoading && <LoadingSpinner asOverlay/>}\r\n            <h2>Login Required</h2>\r\n            <hr/>\r\n        <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n            <Input\r\n            id=\"name\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Your Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please Enter a Name\"\r\n            onInput={inputHandler}\r\n            />\r\n        )}\r\n          {!isLoginMode && (<ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image\"/>)}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"E-Mail\"\r\n            validators={[VALIDATOR_EMAIL(), VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid Email.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid Password (min. 6 characters).\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!formState.isValid}>\r\n            {isLoginMode ? 'LOGIN' : 'SIGNUP' }\r\n          </Button>\r\n        </form>\r\n        <Button inverse onClick={switchModeHandler}>\r\n            SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n        </Button>\r\n        </Card>\r\n        </React.Fragment>\r\n      );\r\n};\r\n\r\n\r\nexport default Auth;"],"sourceRoot":""}