{"version":3,"sources":["Shared/components/UIElements/Card.js","Shared/components/UIElements/Map.js","Places/components/PlaceItem.js","Places/components/PlaceList.js","Places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","console","log","process","id","Authorization","token","onDelete","Fragment","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","responseData","places","fetchPlaces","deletedPlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/7.c69b69b8.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","\r\n// // THIS IS USED FOR GOOGLE MAPS WITHOUT USING CREDIT CARD.\r\n// import React, { useRef, useEffect } from 'react';\r\n \r\n// import './Map.css';\r\n \r\n// const Map = props => {\r\n//   const mapRef = useRef();\r\n  \r\n//   const { center, zoom } = props;\r\n \r\n//   useEffect(() => {\r\n//     new window.ol.Map({\r\n//       target: mapRef.current.id,\r\n//       layers: [\r\n//         new window.ol.layer.Tile({\r\n//           source: new window.ol.source.OSM()\r\n//         })\r\n//       ],\r\n//       view: new window.ol.View({\r\n//         center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n//         zoom: zoom\r\n//       })\r\n//     });\r\n//   }, [center, zoom]);\r\n \r\n//   return (\r\n//     <div\r\n//       ref={mapRef}\r\n//       className={`map ${props.className}`}\r\n//       style={props.style}\r\n//       id=\"map\"\r\n//     ></div>\r\n//   );\r\n// };\r\n \r\n// export default Map;\r\n\r\n//THIS IS USED FOR GOOGLE MAPS SDK DOWNLOADED USING CREDIT CARD.\r\nimport React, {useRef, useEffect} from \"react\";\r\nimport './Map.css';\r\nconst Map = props => {\r\n\r\n    const mapRef = useRef();\r\n    const {center, zoom} = {props};\r\n    useEffect(() => {\r\n        const map = new window.google.maps.Map(mapRef.current, {\r\n            center: center,\r\n            zoom: zoom\r\n        });\r\n    \r\n        new window.google.maps.Marker({position: center, map: map});\r\n    }, [center, zoom]);\r\n    // const map = new window.google.maps.Map(mapRef.current, {\r\n    //     center: props.center,\r\n    //     zoom: props.zoom\r\n    // });\r\n\r\n    // new window.google.maps.Marker({position: props.center, map: map})\r\n    return(\r\n        <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>  // for Flexibilty - not mandatory\r\n    );\r\n};\r\nexport default Map;","import React, {useState, useContext} from \"react\";\r\nimport './PlaceItem.css';\r\nimport Card from '../../Shared/components/UIElements/Card';\r\nimport Button from \"../../Shared/components/FormElements/Button\";\r\nimport Modal from \"../../Shared/components/UIElements/Modal\";\r\nimport ErrorModal from \"../../Shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/components/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../Shared/context/auth-context\";\r\nimport Map from \"../../Shared/components/UIElements/Map\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\n\r\nconst PlaceItem = props => {\r\n    const auth = useContext(AuthContext);\r\n    const {isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [showMap, setShowMap] = useState(false);\r\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  \r\n    const openMapHandler = () => setShowMap(true);\r\n  \r\n    const closeMapHandler = () => setShowMap(false);\r\n  \r\n    const showDeleteWarningHandler = () => {\r\n      setShowConfirmModal(true);\r\n    };\r\n  \r\n    const cancelDeleteHandler = () => {\r\n      setShowConfirmModal(false);\r\n    };\r\n  \r\n    const confirmDeleteHandler = async () => {\r\n      setShowConfirmModal(false);\r\n      console.log('DELETING...');\r\n      try{\r\n       await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/${props.id}`, 'DELETE', null, {\r\n        Authorization: 'Bearer ' + auth.token\r\n       } );  // We use props.id because in Line 87 we pass the same for placeId\r\n      props.onDelete(props.id);   \r\n    }\r\n      \r\n      catch(err){\r\n\r\n      }\r\n\r\n    };\r\n  \r\n    return (\r\n      <React.Fragment>\r\n        <ErrorModal error={error} onClear={clearError}/>\r\n        <Modal\r\n          show={showMap}\r\n          onCancel={closeMapHandler}\r\n          header={props.address}\r\n          contentClass=\"place-item__modal-content\"\r\n          footerClass=\"place-item__modal-actions\"\r\n          footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n        >\r\n          <div className=\"map-container\">\r\n            <Map center={props.coordinates} zoom={16} />\r\n          </div>\r\n        </Modal>\r\n        <Modal\r\n          show={showConfirmModal}\r\n          onCancel={cancelDeleteHandler}\r\n          header=\"Are you sure?\"\r\n          footerClass=\"place-item__modal-actions\"\r\n          footer={\r\n            <React.Fragment>\r\n              <Button inverse onClick={cancelDeleteHandler}>\r\n                CANCEL\r\n              </Button>\r\n              <Button danger onClick={confirmDeleteHandler}>\r\n                DELETE\r\n              </Button>\r\n            </React.Fragment>\r\n          }\r\n        >\r\n          <p>\r\n            Do you want to proceed and delete this place? Please note that it\r\n            can't be undone thereafter.\r\n          </p>\r\n        </Modal>\r\n        <li className=\"place-item\">\r\n          <Card className=\"place-item__content\">\r\n            {isLoading && <LoadingSpinner asOverlay/> }\r\n            <div className=\"place-item__image\">\r\n              <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\r\n            </div>\r\n            <div className=\"place-item__info\">\r\n              <h2>{props.title}</h2>\r\n              <h3>{props.address}</h3>\r\n              <p>{props.description}</p>\r\n            </div>\r\n            <div className=\"place-item__actions\">\r\n              <Button inverse onClick={openMapHandler}>\r\n                VIEW ON MAP\r\n              </Button>\r\n              {auth.userId === props.creatorId && (\r\n                <Button to={`/places/${props.id}`}>EDIT</Button>\r\n              )}\r\n  \r\n              {auth.userId === props.creatorId && (\r\n                <Button danger onClick={showDeleteWarningHandler}>\r\n                  DELETE\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </Card>\r\n        </li>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  \r\n  export default PlaceItem;\r\n  ","import React from \"react\";\r\nimport Card from '../../Shared/components/UIElements/Card';\r\nimport PlaceItem from './PlaceItem';\r\nimport Button from \"../../Shared/components/FormElements/Button\";\r\nimport './PlaceList.css';\r\n\r\nconst PlaceList = props => {\r\n    if (props.items.length === 0) {\r\n        return( \r\n        <div className=\"place-list center\">\r\n            <Card>\r\n                <h2>No Places Found. May be Create one!</h2>\r\n                <Button to=\"/places/new\">Share Place</Button>\r\n            </Card>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    return(\r\n        <ul className=\"place-list\">\r\n            {props.items.map(place => (\r\n            <PlaceItem \r\n            key={place.id} \r\n            id={place.id} \r\n            image={place.image} \r\n            title ={place.title} \r\n            description={place.description} \r\n            address={place.address} \r\n            creatorId={place.creator} \r\n            coordinates={place.location} \r\n            onDelete={props.onDeletePlace}\r\n            />\r\n         ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\n\r\nexport default PlaceList;","import React, {useEffect, useState} from \"react\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../Shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../Shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../Shared/components/UIElements/LoadingSpinner\";\r\n\r\n// const DUMMY_PLACES =[\r\n//     {\r\n//     id:'p1',\r\n//     title: 'Taj Mahal',\r\n//     description: 'One of the Top 10 Wonders in the World!',\r\n//     imageUrl:'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Taj_Mahal_Front.JPG/800px-Taj_Mahal_Front.JPG?20120915083330',\r\n//     address:'Dharmapuri, Forest Colony, Tajganj, Agra, Uttar Pradesh 282001',\r\n//     location:{\r\n//         lat: 27.173891,\r\n//         long: 78.042068\r\n//     },\r\n//     creator: 'u1'\r\n//     },\r\n\r\n//     {\r\n//         id:'p2',\r\n//         title: 'Taj Mahal',\r\n//         description: 'One of the Top 10 Wonders in the World!',\r\n//         imageUrl:'https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Taj_Mahal_Front.JPG/800px-Taj_Mahal_Front.JPG?20120915083330',\r\n//         address:'Dharmapuri, Forest Colony, Tajganj, Agra, Uttar Pradesh 282001',\r\n//         location:{\r\n//             lat: 27.173891,\r\n//             long: 78.042068\r\n//         },\r\n//         creator: 'u2'\r\n//     }\r\n// ];\r\n\r\nconst UserPlaces = () => {\r\n    const {isLoading, error, sendRequest, clearError} = useHttpClient();\r\n    const [loadedPlaces, setLoadedPlaces] = useState();\r\n    const userId = useParams().userId;\r\n\r\n    useEffect(()=>{\r\n        const fetchPlaces = async () =>{\r\n            try{\r\n                const responseData = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`);\r\n                setLoadedPlaces(responseData.places);\r\n            }\r\n            catch(err){\r\n\r\n            }\r\n        }\r\n        fetchPlaces();\r\n    },[sendRequest, userId])\r\n\r\n    const placeDeleteHandler = deletedPlaceId => {\r\n        setLoadedPlaces(prevPlaces => prevPlaces.filter(place => place.id !== deletedPlaceId))\r\n    }\r\n    // const loadedPlaces = DUMMY_PLACES.filter(place => place.creator === userId);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear = {clearError}/>\r\n            {isLoading && <div className=\"center\"><LoadingSpinner asOverlay/></div> }\r\n        {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace = {placeDeleteHandler}/>}\r\n        </React.Fragment>\r\n    );\r\n\r\n};\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}