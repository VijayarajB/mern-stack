{"version":3,"sources":["Shared/context/auth-context.js","Shared/components/UIElements/LoadingSpinner.js","Shared/components/UIElements/Backdrop.js","Shared/hooks/auth-hook.js","Shared/components/Navigation/MainHeader.js","Shared/components/Navigation/NavLinks.js","Shared/components/Navigation/SideDrawer.js","Shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","Content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlaces","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.1b118061.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n    isLoggedIn: false,\r\n    userId: null,\r\n    token: null,\r\n    login: () => {},\r\n    logout: () => {}\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useCallback, useState, useEffect } from \"react\";\r\n\r\n\r\nlet  logoutTimer;\r\nexport const useAuth = () => {\r\n  const[token, setToken] = useState(false);\r\n  const[userId, setUserId] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const login = useCallback ((userId, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(userId);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem('userData', JSON.stringify({userId: userId, token: token, expiration: tokenExpirationDate.toISOString()}));\r\n    // toISOString () is used bcoz no data get lost by strngifying it. It stores all the date information\r\n  },[]);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    setTokenExpirationDate(null);\r\n    localStorage.removeItem('userData');\r\n  },[]);\r\n  useEffect(() => {\r\n    if(token && tokenExpirationDate){\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime );\r\n    } else{\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if(storedData && storedData.token && new Date(storedData.expiration) > new Date()){   // Comparing the storedDate is greater than the current date\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n  return {token, login, logout, userId};\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return(\r\n    <header className='main-header'>\r\n    {props.children}\r\n    </header>\r\n    )\r\n};\r\n\r\nexport default MainHeader;","import React, {useContext} from \"react\";\r\nimport { NavLink } from \"react-router-dom/cjs/react-router-dom.min\"; \r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n    return(\r\n        <ul className=\"nav-links\">\r\n            <li>\r\n                <NavLink to=\"/\" exact>ALL USERS</NavLink>\r\n            </li>\r\n            {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n            </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n            </li>\r\n            )}\r\n            {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n            </li>\r\n            )}\r\n            {auth.isLoggedIn && (\r\n                <li>\r\n                    <button onClick={auth.logout}>LOGOUT</button>\r\n                </li>\r\n            )}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default NavLinks;","import React from \"react\";\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    \r\n        const Content = (\r\n        <CSSTransition \r\n        in={props.show}\r\n        timeout={200}\r\n        classNames={'slide-in-left'}\r\n        mountOnEnter\r\n        unmountOnExit >\r\n\r\n            <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n\r\n        </CSSTransition>\r\n        );\r\n        return ReactDOM.createPortal(Content, document.getElementById('drawer-hook')) ;\r\n};\r\nexport default SideDrawer;","import React, {useState} from \"react\";\r\nimport { Link} from \"react-router-dom/cjs/react-router-dom.min\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n    const openDrawerHandler = () => {\r\n        setDrawerIsOpen(true);\r\n    };\r\n\r\n    const closeDrawerHandler = () => {\r\n        setDrawerIsOpen (false);\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n        {drawerIsOpen && <Backdrop onClick={closeDrawerHandler}/>}\r\n        <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n            <nav className=\"main-navigation__drawer-nav\">\r\n                <NavLinks/>\r\n            </nav>\r\n        </SideDrawer>\r\n        <MainHeader>\r\n            <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n            <span/><span/><span/>\r\n            </button>\r\n            <h2 className=\"main-navigation__title\">\r\n            <Link to=\"/\">Your Places</Link>\r\n            </h2>\r\n            <nav className=\"main-navigation__header-nav\">\r\n                <NavLinks/>\r\n            </nav>\r\n        </MainHeader>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavigation","import React, {Suspense} from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom/cjs/react-router-dom.min';\n//import Users from './Users/pages/users';\n//import UserPlaces from './Places/pages/UserPlaces';\n//import NewPlaces from './Places/pages/NewPlaces';\n//import UpdatePlace from './Places/pages/UpdatePlace';\nimport MainNavigation from './Shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './Shared/context/auth-context';\n//import Auth from './Users/pages/Auth';\nimport { useAuth } from './Shared/hooks/auth-hook';\nimport LoadingSpinner from './Shared/components/UIElements/LoadingSpinner';\n\n//To load the unncessary routes lazily initially we use the following code.\nconst Users = React.lazy(() => import('./Users/pages/users'));\nconst NewPlaces = React.lazy(() => import('./Places/pages/NewPlaces'));\nconst UserPlaces = React.lazy(() => import('./Places/pages/UserPlaces'));\nconst UpdatePlace = React.lazy(() => import('./Places/pages/UpdatePlace'));\nconst Auth = React.lazy(() => import('./Users/pages/Auth'));\n\nconst App = () => {\n  const {token, login, logout, userId} = useAuth();\n  let routes;\n  if(token){\n    routes = (\n      <Switch>\n    <Route path=\"/\" exact>\n     <Users/>\n    </Route>\n    <Route path=\"/:userId/places\" exact>\n      <UserPlaces/>\n    </Route>\n    <Route path=\"/places/new\" exact>\n     <NewPlaces/>\n    </Route>\n    <Route path=\"/places/:placeId\">\n    <UpdatePlace/>\n    </Route>\n    <Redirect to ='/'/>\n    </Switch>\n    );\n  }\n  else{\n    routes = (\n      <Switch>\n      <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n        </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider \n    value={{\n      isLoggedIn: !!token,\n      token: token ,\n      userId:userId, \n      login:login,\n      logout:logout\n    }}>\n  <Router>\n    <MainNavigation/>\n    <main>\n    <Suspense fallback={\n    <div className='center'>\n      <LoadingSpinner/>\n    </div>}>\n    {routes}\n    </Suspense>\n    </main>\n  </Router>\n  </AuthContext.Provider>\n);};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}